{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"0QAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKjB,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAeZM,GAfY,4CAAH,sDCIPO,G,MAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,4DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,SCFJO,G,MAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECLwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHC,YAAW,WAEPC,QAAQC,IAAIH,GAEZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGZ,CAACpB,IAIGqB,EDtBwBQ,CAAa7B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADGA,EAAIC,cEhBtBmB,EAAe,SAAC,GAA8B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,EAItD,EAAoC7C,mBAAS6C,GAA7C,mBAAOC,EAAP,KAAmB/C,EAAnB,KAEA,OACI,sBAAK+B,UAAU,YAAf,UACI,8CACA,cAAC,EAAD,CAAa/B,cAAeA,IAC5B,uBAGA,6BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADPA,Y,MCfjCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3b1a4af3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './styles/AddCategory.css';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n           setCategories(cats => [inputValue, ...cats ]);\r\n           setInputValue('')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hu7X2DPoq32iBMWgHSlxQw3A9eOv0v7Z`;\r\n    const respuesta = await fetch(url)\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    \r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'; //impt\r\nimport './styles/GifGridItem.css';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn  animate__delay-1s\">\r\n            <img src={url} alt={title}></img>\r\n            <p >{title}</p>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/GifGrid.css';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img=> (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img} />\r\n                    )) \r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n}","import { useState,useEffect}  from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    console.log(imgs);\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 3000)\r\n            })\r\n\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ({defaultCategories = []}) => {\r\n\r\n\r\n    //const [categories, setCategories] = useState(['Vikingos']);\r\n    const [categories, setCategories] = useState(defaultCategories);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}